/*
 * Shipping APIs
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pitneybowes.api360.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.pitneybowes.api360.model.MultipieceDomesticShipmentRequestFromAddress;
import com.pitneybowes.api360.model.ShipmentDomesticParcel;
import com.pitneybowes.api360.model.ShipmentMetadataInner;
import com.pitneybowes.api360.model.ShipmentOptions;
import com.pitneybowes.api360.model.ShipmentToAddress;
import com.pitneybowes.api360.model.SpecialService;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Shipment
 */
@JsonPropertyOrder({
  Shipment.JSON_PROPERTY_EXTERNAL_ID,
  Shipment.JSON_PROPERTY_FROM_ADDRESS,
  Shipment.JSON_PROPERTY_PARCEL,
  Shipment.JSON_PROPERTY_CARRIER_ACCOUNT_ID,
  Shipment.JSON_PROPERTY_PARCEL_TYPE,
  Shipment.JSON_PROPERTY_SERVICE_ID,
  Shipment.JSON_PROPERTY_DATE_OF_SHIPMENT,
  Shipment.JSON_PROPERTY_SPECIAL_SERVICES,
  Shipment.JSON_PROPERTY_SHIPMENT_OPTIONS,
  Shipment.JSON_PROPERTY_METADATA,
  Shipment.JSON_PROPERTY_TO_ADDRESS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-30T12:57:37.504069+05:30[Asia/Kolkata]", comments = "Generator version: 7.7.0")
public class Shipment {
  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private String externalId;

  public static final String JSON_PROPERTY_FROM_ADDRESS = "fromAddress";
  private MultipieceDomesticShipmentRequestFromAddress fromAddress;

  public static final String JSON_PROPERTY_PARCEL = "parcel";
  private ShipmentDomesticParcel parcel;

  public static final String JSON_PROPERTY_CARRIER_ACCOUNT_ID = "carrierAccountId";
  private String carrierAccountId;

  public static final String JSON_PROPERTY_PARCEL_TYPE = "parcelType";
  private String parcelType;

  public static final String JSON_PROPERTY_SERVICE_ID = "serviceId";
  private String serviceId;

  public static final String JSON_PROPERTY_DATE_OF_SHIPMENT = "dateOfShipment";
  private String dateOfShipment;

  public static final String JSON_PROPERTY_SPECIAL_SERVICES = "specialServices";
  private List<SpecialService> specialServices = new ArrayList<>();

  public static final String JSON_PROPERTY_SHIPMENT_OPTIONS = "shipmentOptions";
  private ShipmentOptions shipmentOptions;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private List<ShipmentMetadataInner> metadata = new ArrayList<>();

  public static final String JSON_PROPERTY_TO_ADDRESS = "toAddress";
  private ShipmentToAddress toAddress;

  public Shipment() {
  }

  public Shipment externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

  /**
   * The external ID of the shipment. User can provide any custom value to it for its own reference
   * @return externalId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public Shipment fromAddress(MultipieceDomesticShipmentRequestFromAddress fromAddress) {
    
    this.fromAddress = fromAddress;
    return this;
  }

  /**
   * Get fromAddress
   * @return fromAddress
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FROM_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MultipieceDomesticShipmentRequestFromAddress getFromAddress() {
    return fromAddress;
  }


  @JsonProperty(JSON_PROPERTY_FROM_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFromAddress(MultipieceDomesticShipmentRequestFromAddress fromAddress) {
    this.fromAddress = fromAddress;
  }

  public Shipment parcel(ShipmentDomesticParcel parcel) {
    
    this.parcel = parcel;
    return this;
  }

  /**
   * Get parcel
   * @return parcel
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARCEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShipmentDomesticParcel getParcel() {
    return parcel;
  }


  @JsonProperty(JSON_PROPERTY_PARCEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParcel(ShipmentDomesticParcel parcel) {
    this.parcel = parcel;
  }

  public Shipment carrierAccountId(String carrierAccountId) {
    
    this.carrierAccountId = carrierAccountId;
    return this;
  }

  /**
   * A unique identifier associated with the Carrier account used by client users during shipment process.
   * @return carrierAccountId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CARRIER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCarrierAccountId() {
    return carrierAccountId;
  }


  @JsonProperty(JSON_PROPERTY_CARRIER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCarrierAccountId(String carrierAccountId) {
    this.carrierAccountId = carrierAccountId;
  }

  public Shipment parcelType(String parcelType) {
    
    this.parcelType = parcelType;
    return this;
  }

  /**
   * &gt;-Packaging type specific to the carrier, e.g., FRPKG, LGENV, TUBE,PKG.
   * @return parcelType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARCEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getParcelType() {
    return parcelType;
  }


  @JsonProperty(JSON_PROPERTY_PARCEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParcelType(String parcelType) {
    this.parcelType = parcelType;
  }

  public Shipment serviceId(String serviceId) {
    
    this.serviceId = serviceId;
    return this;
  }

  /**
   * &gt;-The abbreviated name of the carrier-specific service. Required for creating a shipment. Optional for rating a parcel.
   * @return serviceId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getServiceId() {
    return serviceId;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }

  public Shipment dateOfShipment(String dateOfShipment) {
    
    this.dateOfShipment = dateOfShipment;
    return this;
  }

  /**
   * Current Shipment date
   * @return dateOfShipment
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_SHIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDateOfShipment() {
    return dateOfShipment;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_SHIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfShipment(String dateOfShipment) {
    this.dateOfShipment = dateOfShipment;
  }

  public Shipment specialServices(List<SpecialService> specialServices) {
    
    this.specialServices = specialServices;
    return this;
  }

  public Shipment addSpecialServicesItem(SpecialService specialServicesItem) {
    if (this.specialServices == null) {
      this.specialServices = new ArrayList<>();
    }
    this.specialServices.add(specialServicesItem);
    return this;
  }

  /**
   * Get specialServices
   * @return specialServices
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPECIAL_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecialService> getSpecialServices() {
    return specialServices;
  }


  @JsonProperty(JSON_PROPERTY_SPECIAL_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecialServices(List<SpecialService> specialServices) {
    this.specialServices = specialServices;
  }

  public Shipment shipmentOptions(ShipmentOptions shipmentOptions) {
    
    this.shipmentOptions = shipmentOptions;
    return this;
  }

  /**
   * Get shipmentOptions
   * @return shipmentOptions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPMENT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentOptions getShipmentOptions() {
    return shipmentOptions;
  }


  @JsonProperty(JSON_PROPERTY_SHIPMENT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipmentOptions(ShipmentOptions shipmentOptions) {
    this.shipmentOptions = shipmentOptions;
  }

  public Shipment metadata(List<ShipmentMetadataInner> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public Shipment addMetadataItem(ShipmentMetadataInner metadataItem) {
    if (this.metadata == null) {
      this.metadata = new ArrayList<>();
    }
    this.metadata.add(metadataItem);
    return this;
  }

  /**
   * Additional metadata that needs to be stored for this shipment can be added here. For now, &#x60;costAccountName&#x60; is supported.
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ShipmentMetadataInner> getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(List<ShipmentMetadataInner> metadata) {
    this.metadata = metadata;
  }

  public Shipment toAddress(ShipmentToAddress toAddress) {
    
    this.toAddress = toAddress;
    return this;
  }

  /**
   * Get toAddress
   * @return toAddress
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShipmentToAddress getToAddress() {
    return toAddress;
  }


  @JsonProperty(JSON_PROPERTY_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setToAddress(ShipmentToAddress toAddress) {
    this.toAddress = toAddress;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Shipment shipment = (Shipment) o;
    return Objects.equals(this.externalId, shipment.externalId) &&
        Objects.equals(this.fromAddress, shipment.fromAddress) &&
        Objects.equals(this.parcel, shipment.parcel) &&
        Objects.equals(this.carrierAccountId, shipment.carrierAccountId) &&
        Objects.equals(this.parcelType, shipment.parcelType) &&
        Objects.equals(this.serviceId, shipment.serviceId) &&
        Objects.equals(this.dateOfShipment, shipment.dateOfShipment) &&
        Objects.equals(this.specialServices, shipment.specialServices) &&
        Objects.equals(this.shipmentOptions, shipment.shipmentOptions) &&
        Objects.equals(this.metadata, shipment.metadata) &&
        Objects.equals(this.toAddress, shipment.toAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalId, fromAddress, parcel, carrierAccountId, parcelType, serviceId, dateOfShipment, specialServices, shipmentOptions, metadata, toAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Shipment {\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    fromAddress: ").append(toIndentedString(fromAddress)).append("\n");
    sb.append("    parcel: ").append(toIndentedString(parcel)).append("\n");
    sb.append("    carrierAccountId: ").append(toIndentedString(carrierAccountId)).append("\n");
    sb.append("    parcelType: ").append(toIndentedString(parcelType)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    dateOfShipment: ").append(toIndentedString(dateOfShipment)).append("\n");
    sb.append("    specialServices: ").append(toIndentedString(specialServices)).append("\n");
    sb.append("    shipmentOptions: ").append(toIndentedString(shipmentOptions)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    toAddress: ").append(toIndentedString(toAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

