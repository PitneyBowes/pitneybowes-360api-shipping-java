/*
 * Shipping APIs
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pitneybowes.api360.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.pitneybowes.api360.model.SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerInputParameterRulesInner;
import com.pitneybowes.api360.model.SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerPrerequisiteRulesInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner
 */
@JsonPropertyOrder({
  SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.JSON_PROPERTY_SPECIALSERVICE_ID,
  SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.JSON_PROPERTY_BRANDED_NAME,
  SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.JSON_PROPERTY_CATEGORY_ID,
  SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.JSON_PROPERTY_CATEGORY_NAME,
  SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.JSON_PROPERTY_INCOMPATIBLE_SPECIAL_SERVICES,
  SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.JSON_PROPERTY_INPUT_PARAMETER_RULES,
  SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.JSON_PROPERTY_PREREQUISITE_RULES,
  SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.JSON_PROPERTY_TRACKABLE
})
@JsonTypeName("specialServices_services_inner_parcelTypeRules_inner_specialServiceRules_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-30T12:57:37.504069+05:30[Asia/Kolkata]", comments = "Generator version: 7.7.0")
public class SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner {
  public static final String JSON_PROPERTY_SPECIALSERVICE_ID = "specialserviceId";
  private String specialserviceId;

  public static final String JSON_PROPERTY_BRANDED_NAME = "brandedName";
  private String brandedName;

  public static final String JSON_PROPERTY_CATEGORY_ID = "categoryId";
  private String categoryId;

  public static final String JSON_PROPERTY_CATEGORY_NAME = "categoryName";
  private String categoryName;

  public static final String JSON_PROPERTY_INCOMPATIBLE_SPECIAL_SERVICES = "incompatibleSpecialServices";
  private List<String> incompatibleSpecialServices = new ArrayList<>();

  public static final String JSON_PROPERTY_INPUT_PARAMETER_RULES = "inputParameterRules";
  private List<SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerInputParameterRulesInner> inputParameterRules = new ArrayList<>();

  public static final String JSON_PROPERTY_PREREQUISITE_RULES = "prerequisiteRules";
  private List<SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerPrerequisiteRulesInner> prerequisiteRules = new ArrayList<>();

  public static final String JSON_PROPERTY_TRACKABLE = "trackable";
  private Boolean trackable;

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner() {
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner specialserviceId(String specialserviceId) {
    
    this.specialserviceId = specialserviceId;
    return this;
  }

  /**
   * It display the unique id of the special service
   * @return specialserviceId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPECIALSERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSpecialserviceId() {
    return specialserviceId;
  }


  @JsonProperty(JSON_PROPERTY_SPECIALSERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecialserviceId(String specialserviceId) {
    this.specialserviceId = specialserviceId;
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner brandedName(String brandedName) {
    
    this.brandedName = brandedName;
    return this;
  }

  /**
   * The brand name of the special service.
   * @return brandedName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRANDED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrandedName() {
    return brandedName;
  }


  @JsonProperty(JSON_PROPERTY_BRANDED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrandedName(String brandedName) {
    this.brandedName = brandedName;
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

  /**
   * The unique identifier associated with the special service based on the category.
   * @return categoryId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategoryId() {
    return categoryId;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner categoryName(String categoryName) {
    
    this.categoryName = categoryName;
    return this;
  }

  /**
   * The special service is categorized with some name and rules, It indicates the category name of the special service.
   * @return categoryName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategoryName() {
    return categoryName;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryName(String categoryName) {
    this.categoryName = categoryName;
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner incompatibleSpecialServices(List<String> incompatibleSpecialServices) {
    
    this.incompatibleSpecialServices = incompatibleSpecialServices;
    return this;
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner addIncompatibleSpecialServicesItem(String incompatibleSpecialServicesItem) {
    if (this.incompatibleSpecialServices == null) {
      this.incompatibleSpecialServices = new ArrayList<>();
    }
    this.incompatibleSpecialServices.add(incompatibleSpecialServicesItem);
    return this;
  }

  /**
   * Indicates non-compatible special services with this special service
   * @return incompatibleSpecialServices
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCOMPATIBLE_SPECIAL_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getIncompatibleSpecialServices() {
    return incompatibleSpecialServices;
  }


  @JsonProperty(JSON_PROPERTY_INCOMPATIBLE_SPECIAL_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncompatibleSpecialServices(List<String> incompatibleSpecialServices) {
    this.incompatibleSpecialServices = incompatibleSpecialServices;
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner inputParameterRules(List<SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerInputParameterRulesInner> inputParameterRules) {
    
    this.inputParameterRules = inputParameterRules;
    return this;
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner addInputParameterRulesItem(SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerInputParameterRulesInner inputParameterRulesItem) {
    if (this.inputParameterRules == null) {
      this.inputParameterRules = new ArrayList<>();
    }
    this.inputParameterRules.add(inputParameterRulesItem);
    return this;
  }

  /**
   * The rules defined for input parameters for this special service
   * @return inputParameterRules
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_PARAMETER_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerInputParameterRulesInner> getInputParameterRules() {
    return inputParameterRules;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_PARAMETER_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputParameterRules(List<SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerInputParameterRulesInner> inputParameterRules) {
    this.inputParameterRules = inputParameterRules;
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner prerequisiteRules(List<SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerPrerequisiteRulesInner> prerequisiteRules) {
    
    this.prerequisiteRules = prerequisiteRules;
    return this;
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner addPrerequisiteRulesItem(SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerPrerequisiteRulesInner prerequisiteRulesItem) {
    if (this.prerequisiteRules == null) {
      this.prerequisiteRules = new ArrayList<>();
    }
    this.prerequisiteRules.add(prerequisiteRulesItem);
    return this;
  }

  /**
   * It displays other pre-requisite special services for this special service
   * @return prerequisiteRules
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREREQUISITE_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerPrerequisiteRulesInner> getPrerequisiteRules() {
    return prerequisiteRules;
  }


  @JsonProperty(JSON_PROPERTY_PREREQUISITE_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrerequisiteRules(List<SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInnerPrerequisiteRulesInner> prerequisiteRules) {
    this.prerequisiteRules = prerequisiteRules;
  }

  public SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner trackable(Boolean trackable) {
    
    this.trackable = trackable;
    return this;
  }

  /**
   * If this special service is trackable or not
   * @return trackable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACKABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTrackable() {
    return trackable;
  }


  @JsonProperty(JSON_PROPERTY_TRACKABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackable(Boolean trackable) {
    this.trackable = trackable;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner specialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner = (SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner) o;
    return Objects.equals(this.specialserviceId, specialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.specialserviceId) &&
        Objects.equals(this.brandedName, specialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.brandedName) &&
        Objects.equals(this.categoryId, specialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.categoryId) &&
        Objects.equals(this.categoryName, specialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.categoryName) &&
        Objects.equals(this.incompatibleSpecialServices, specialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.incompatibleSpecialServices) &&
        Objects.equals(this.inputParameterRules, specialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.inputParameterRules) &&
        Objects.equals(this.prerequisiteRules, specialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.prerequisiteRules) &&
        Objects.equals(this.trackable, specialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner.trackable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(specialserviceId, brandedName, categoryId, categoryName, incompatibleSpecialServices, inputParameterRules, prerequisiteRules, trackable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpecialServicesServicesInnerParcelTypeRulesInnerSpecialServiceRulesInner {\n");
    sb.append("    specialserviceId: ").append(toIndentedString(specialserviceId)).append("\n");
    sb.append("    brandedName: ").append(toIndentedString(brandedName)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    categoryName: ").append(toIndentedString(categoryName)).append("\n");
    sb.append("    incompatibleSpecialServices: ").append(toIndentedString(incompatibleSpecialServices)).append("\n");
    sb.append("    inputParameterRules: ").append(toIndentedString(inputParameterRules)).append("\n");
    sb.append("    prerequisiteRules: ").append(toIndentedString(prerequisiteRules)).append("\n");
    sb.append("    trackable: ").append(toIndentedString(trackable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

