/*
 * Shipping APIs
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pitneybowes.api360.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.pitneybowes.api360.model.CarriersCarriersInnerProperties;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CarriersCarriersInner
 */
@JsonPropertyOrder({
  CarriersCarriersInner.JSON_PROPERTY_CARRIER_I_D,
  CarriersCarriersInner.JSON_PROPERTY_NAME,
  CarriersCarriersInner.JSON_PROPERTY_ORIGIN_COUNTRY,
  CarriersCarriersInner.JSON_PROPERTY_PROPERTIES
})
@JsonTypeName("carriers_carriers_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-30T12:57:37.504069+05:30[Asia/Kolkata]", comments = "Generator version: 7.7.0")
public class CarriersCarriersInner {
  public static final String JSON_PROPERTY_CARRIER_I_D = "carrierID";
  private String carrierID;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ORIGIN_COUNTRY = "originCountry";
  private String originCountry;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private CarriersCarriersInnerProperties properties;

  public CarriersCarriersInner() {
  }

  public CarriersCarriersInner carrierID(String carrierID) {
    
    this.carrierID = carrierID;
    return this;
  }

  /**
   * A unique identifier associated with the specific carrier.
   * @return carrierID
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CARRIER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCarrierID() {
    return carrierID;
  }


  @JsonProperty(JSON_PROPERTY_CARRIER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCarrierID(String carrierID) {
    this.carrierID = carrierID;
  }

  public CarriersCarriersInner name(String name) {
    
    this.name = name;
    return this;
  }

  /**
   * This is the name of the Carrier, a shipping service which is used to carry shipment (e.g., parcels/packages/envelopes) from one place to other.
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }

  public CarriersCarriersInner originCountry(String originCountry) {
    
    this.originCountry = originCountry;
    return this;
  }

  /**
   * This indicates the two-character ISO code of the source country from the ISO country list.
   * @return originCountry
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGIN_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginCountry() {
    return originCountry;
  }


  @JsonProperty(JSON_PROPERTY_ORIGIN_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginCountry(String originCountry) {
    this.originCountry = originCountry;
  }

  public CarriersCarriersInner properties(CarriersCarriersInnerProperties properties) {
    
    this.properties = properties;
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CarriersCarriersInnerProperties getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(CarriersCarriersInnerProperties properties) {
    this.properties = properties;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CarriersCarriersInner carriersCarriersInner = (CarriersCarriersInner) o;
    return Objects.equals(this.carrierID, carriersCarriersInner.carrierID) &&
        Objects.equals(this.name, carriersCarriersInner.name) &&
        Objects.equals(this.originCountry, carriersCarriersInner.originCountry) &&
        Objects.equals(this.properties, carriersCarriersInner.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(carrierID, name, originCountry, properties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CarriersCarriersInner {\n");
    sb.append("    carrierID: ").append(toIndentedString(carrierID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    originCountry: ").append(toIndentedString(originCountry)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

