/*
 * Shipping APIs
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pitneybowes.api360.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.pitneybowes.api360.model.ShipmentDomestic;
import com.pitneybowes.api360.model.ShipmentDomesticParcel;
import com.pitneybowes.api360.model.ShipmentInternational;
import com.pitneybowes.api360.model.ShipmentInternationalCustoms;
import com.pitneybowes.api360.model.ShipmentInternationalFromAddress;
import com.pitneybowes.api360.model.ShipmentInternationalMetadataInner;
import com.pitneybowes.api360.model.ShipmentInternationalToAddress;
import com.pitneybowes.api360.model.ShipmentOptions;
import com.pitneybowes.api360.model.SpecialService;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateShipmentRequest
 */
@JsonPropertyOrder({
  CreateShipmentRequest.JSON_PROPERTY_SIZE,
  CreateShipmentRequest.JSON_PROPERTY_TYPE,
  CreateShipmentRequest.JSON_PROPERTY_FORMAT,
  CreateShipmentRequest.JSON_PROPERTY_DATE_OF_SHIPMENT,
  CreateShipmentRequest.JSON_PROPERTY_FROM_ADDRESS,
  CreateShipmentRequest.JSON_PROPERTY_PARCEL,
  CreateShipmentRequest.JSON_PROPERTY_CARRIER_ACCOUNT_ID,
  CreateShipmentRequest.JSON_PROPERTY_PARCEL_TYPE,
  CreateShipmentRequest.JSON_PROPERTY_PARCEL_ID,
  CreateShipmentRequest.JSON_PROPERTY_SERVICE_ID,
  CreateShipmentRequest.JSON_PROPERTY_SPECIAL_SERVICES,
  CreateShipmentRequest.JSON_PROPERTY_SHIPMENT_OPTIONS,
  CreateShipmentRequest.JSON_PROPERTY_METADATA,
  CreateShipmentRequest.JSON_PROPERTY_TO_ADDRESS,
  CreateShipmentRequest.JSON_PROPERTY_CUSTOMS
})
@JsonTypeName("createShipment_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-30T12:57:37.504069+05:30[Asia/Kolkata]", comments = "Generator version: 7.7.0")
public class CreateShipmentRequest {
  /**
   * This defines the label size of the Shipment, e.g., Shipping Label having Doc Size (8&#39; X 11&#39;).
   */
  public enum SizeEnum {
    DOC_8_X11("DOC_8X11");

    private String value;

    SizeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SizeEnum fromValue(String value) {
      for (SizeEnum b : SizeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SIZE = "size";
  private SizeEnum size;

  /**
   * This defines the type of the Shipment, e.g., Shipping Label.
   */
  public enum TypeEnum {
    SHIPPING_LABEL("SHIPPING_LABEL");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * This defines the type of the shipment which is printed. For example Shipping label prints in PDF form.
   */
  public enum FormatEnum {
    PDF("PDF"),
    
    ZPL2("ZPL2");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FormatEnum fromValue(String value) {
      for (FormatEnum b : FormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FORMAT = "format";
  private FormatEnum format;

  public static final String JSON_PROPERTY_DATE_OF_SHIPMENT = "dateOfShipment";
  private String dateOfShipment;

  public static final String JSON_PROPERTY_FROM_ADDRESS = "fromAddress";
  private ShipmentInternationalFromAddress fromAddress;

  public static final String JSON_PROPERTY_PARCEL = "parcel";
  private ShipmentDomesticParcel parcel;

  public static final String JSON_PROPERTY_CARRIER_ACCOUNT_ID = "carrierAccountId";
  private String carrierAccountId;

  public static final String JSON_PROPERTY_PARCEL_TYPE = "parcelType";
  private String parcelType;

  public static final String JSON_PROPERTY_PARCEL_ID = "parcelId";
  private String parcelId;

  public static final String JSON_PROPERTY_SERVICE_ID = "serviceId";
  private String serviceId;

  public static final String JSON_PROPERTY_SPECIAL_SERVICES = "specialServices";
  private List<SpecialService> specialServices = new ArrayList<>();

  public static final String JSON_PROPERTY_SHIPMENT_OPTIONS = "shipmentOptions";
  private ShipmentOptions shipmentOptions;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private List<ShipmentInternationalMetadataInner> metadata = new ArrayList<>();

  public static final String JSON_PROPERTY_TO_ADDRESS = "toAddress";
  private ShipmentInternationalToAddress toAddress;

  public static final String JSON_PROPERTY_CUSTOMS = "customs";
  private ShipmentInternationalCustoms customs;

  public CreateShipmentRequest() {
  }

  public CreateShipmentRequest size(SizeEnum size) {
    
    this.size = size;
    return this;
  }

  /**
   * This defines the label size of the Shipment, e.g., Shipping Label having Doc Size (8&#39; X 11&#39;).
   * @return size
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SizeEnum getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(SizeEnum size) {
    this.size = size;
  }

  public CreateShipmentRequest type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

  /**
   * This defines the type of the Shipment, e.g., Shipping Label.
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }

  public CreateShipmentRequest format(FormatEnum format) {
    
    this.format = format;
    return this;
  }

  /**
   * This defines the type of the shipment which is printed. For example Shipping label prints in PDF form.
   * @return format
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FormatEnum getFormat() {
    return format;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormat(FormatEnum format) {
    this.format = format;
  }

  public CreateShipmentRequest dateOfShipment(String dateOfShipment) {
    
    this.dateOfShipment = dateOfShipment;
    return this;
  }

  /**
   * This defines the date of the Shipment in the format YYYY:MM:DD.
   * @return dateOfShipment
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_SHIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDateOfShipment() {
    return dateOfShipment;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_SHIPMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfShipment(String dateOfShipment) {
    this.dateOfShipment = dateOfShipment;
  }

  public CreateShipmentRequest fromAddress(ShipmentInternationalFromAddress fromAddress) {
    
    this.fromAddress = fromAddress;
    return this;
  }

  /**
   * Get fromAddress
   * @return fromAddress
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FROM_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShipmentInternationalFromAddress getFromAddress() {
    return fromAddress;
  }


  @JsonProperty(JSON_PROPERTY_FROM_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFromAddress(ShipmentInternationalFromAddress fromAddress) {
    this.fromAddress = fromAddress;
  }

  public CreateShipmentRequest parcel(ShipmentDomesticParcel parcel) {
    
    this.parcel = parcel;
    return this;
  }

  /**
   * Get parcel
   * @return parcel
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARCEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShipmentDomesticParcel getParcel() {
    return parcel;
  }


  @JsonProperty(JSON_PROPERTY_PARCEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParcel(ShipmentDomesticParcel parcel) {
    this.parcel = parcel;
  }

  public CreateShipmentRequest carrierAccountId(String carrierAccountId) {
    
    this.carrierAccountId = carrierAccountId;
    return this;
  }

  /**
   * The unique identifier associated with the Carrier account used by client users during shipment process.
   * @return carrierAccountId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CARRIER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCarrierAccountId() {
    return carrierAccountId;
  }


  @JsonProperty(JSON_PROPERTY_CARRIER_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCarrierAccountId(String carrierAccountId) {
    this.carrierAccountId = carrierAccountId;
  }

  public CreateShipmentRequest parcelType(String parcelType) {
    
    this.parcelType = parcelType;
    return this;
  }

  /**
   * &gt;-Parcel Type is required for creating a shipment while rating a parcel, which varies as per Carrier selection. It has categories like Package, Envelopes, Paks, Boxes, Tube, defined per specific carrier and used in abbreviated form, e.g., FRPKG, LGENV, TUBE,PKG.
   * @return parcelType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARCEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getParcelType() {
    return parcelType;
  }


  @JsonProperty(JSON_PROPERTY_PARCEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParcelType(String parcelType) {
    this.parcelType = parcelType;
  }

  public CreateShipmentRequest parcelId(String parcelId) {
    
    this.parcelId = parcelId;
    return this;
  }

  /**
   * &gt;-Parcel Id is optional and required to be given in case of branded parcels which have brandedDimension and/or brandedWeight. If parcel has brandedDimension, in that case user need not to pass dimensionUnit and dimension details(length, width and height) in the parcel object. And if brandedWeight is also available for the parcel then in that case weightUnit and weight need not to be passed  in parcel object
   * @return parcelId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARCEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParcelId() {
    return parcelId;
  }


  @JsonProperty(JSON_PROPERTY_PARCEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParcelId(String parcelId) {
    this.parcelId = parcelId;
  }

  public CreateShipmentRequest serviceId(String serviceId) {
    
    this.serviceId = serviceId;
    return this;
  }

  /**
   * &gt;-A unique identifier given to the carrier-specific service. This is required for creating a shipment, while it is optional for rating a parcel.
   * @return serviceId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getServiceId() {
    return serviceId;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }

  public CreateShipmentRequest specialServices(List<SpecialService> specialServices) {
    
    this.specialServices = specialServices;
    return this;
  }

  public CreateShipmentRequest addSpecialServicesItem(SpecialService specialServicesItem) {
    if (this.specialServices == null) {
      this.specialServices = new ArrayList<>();
    }
    this.specialServices.add(specialServicesItem);
    return this;
  }

  /**
   * This provides a carrier-service based special or extra sevice.
   * @return specialServices
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPECIAL_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecialService> getSpecialServices() {
    return specialServices;
  }


  @JsonProperty(JSON_PROPERTY_SPECIAL_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecialServices(List<SpecialService> specialServices) {
    this.specialServices = specialServices;
  }

  public CreateShipmentRequest shipmentOptions(ShipmentOptions shipmentOptions) {
    
    this.shipmentOptions = shipmentOptions;
    return this;
  }

  /**
   * Get shipmentOptions
   * @return shipmentOptions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPMENT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentOptions getShipmentOptions() {
    return shipmentOptions;
  }


  @JsonProperty(JSON_PROPERTY_SHIPMENT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipmentOptions(ShipmentOptions shipmentOptions) {
    this.shipmentOptions = shipmentOptions;
  }

  public CreateShipmentRequest metadata(List<ShipmentInternationalMetadataInner> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public CreateShipmentRequest addMetadataItem(ShipmentInternationalMetadataInner metadataItem) {
    if (this.metadata == null) {
      this.metadata = new ArrayList<>();
    }
    this.metadata.add(metadataItem);
    return this;
  }

  /**
   * Additional metadata that needs to be stored for this shipment can be added here. For now, &#x60;costAccountName&#x60; is supported.
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ShipmentInternationalMetadataInner> getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(List<ShipmentInternationalMetadataInner> metadata) {
    this.metadata = metadata;
  }

  public CreateShipmentRequest toAddress(ShipmentInternationalToAddress toAddress) {
    
    this.toAddress = toAddress;
    return this;
  }

  /**
   * Get toAddress
   * @return toAddress
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShipmentInternationalToAddress getToAddress() {
    return toAddress;
  }


  @JsonProperty(JSON_PROPERTY_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setToAddress(ShipmentInternationalToAddress toAddress) {
    this.toAddress = toAddress;
  }

  public CreateShipmentRequest customs(ShipmentInternationalCustoms customs) {
    
    this.customs = customs;
    return this;
  }

  /**
   * Get customs
   * @return customs
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ShipmentInternationalCustoms getCustoms() {
    return customs;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustoms(ShipmentInternationalCustoms customs) {
    this.customs = customs;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateShipmentRequest createShipmentRequest = (CreateShipmentRequest) o;
    return Objects.equals(this.size, createShipmentRequest.size) &&
        Objects.equals(this.type, createShipmentRequest.type) &&
        Objects.equals(this.format, createShipmentRequest.format) &&
        Objects.equals(this.dateOfShipment, createShipmentRequest.dateOfShipment) &&
        Objects.equals(this.fromAddress, createShipmentRequest.fromAddress) &&
        Objects.equals(this.parcel, createShipmentRequest.parcel) &&
        Objects.equals(this.carrierAccountId, createShipmentRequest.carrierAccountId) &&
        Objects.equals(this.parcelType, createShipmentRequest.parcelType) &&
        Objects.equals(this.parcelId, createShipmentRequest.parcelId) &&
        Objects.equals(this.serviceId, createShipmentRequest.serviceId) &&
        Objects.equals(this.specialServices, createShipmentRequest.specialServices) &&
        Objects.equals(this.shipmentOptions, createShipmentRequest.shipmentOptions) &&
        Objects.equals(this.metadata, createShipmentRequest.metadata) &&
        Objects.equals(this.toAddress, createShipmentRequest.toAddress) &&
        Objects.equals(this.customs, createShipmentRequest.customs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(size, type, format, dateOfShipment, fromAddress, parcel, carrierAccountId, parcelType, parcelId, serviceId, specialServices, shipmentOptions, metadata, toAddress, customs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateShipmentRequest {\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    dateOfShipment: ").append(toIndentedString(dateOfShipment)).append("\n");
    sb.append("    fromAddress: ").append(toIndentedString(fromAddress)).append("\n");
    sb.append("    parcel: ").append(toIndentedString(parcel)).append("\n");
    sb.append("    carrierAccountId: ").append(toIndentedString(carrierAccountId)).append("\n");
    sb.append("    parcelType: ").append(toIndentedString(parcelType)).append("\n");
    sb.append("    parcelId: ").append(toIndentedString(parcelId)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    specialServices: ").append(toIndentedString(specialServices)).append("\n");
    sb.append("    shipmentOptions: ").append(toIndentedString(shipmentOptions)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    toAddress: ").append(toIndentedString(toAddress)).append("\n");
    sb.append("    customs: ").append(toIndentedString(customs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

