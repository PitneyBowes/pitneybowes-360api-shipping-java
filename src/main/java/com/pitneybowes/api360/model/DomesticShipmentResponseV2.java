/*
 * Shipping APIs
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pitneybowes.api360.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.pitneybowes.api360.model.DomesticShipmentResponseV2LabelLayoutInner;
import com.pitneybowes.api360.model.DomesticShipmentResponseV2PrintError;
import com.pitneybowes.api360.model.FromAddressV2Response;
import com.pitneybowes.api360.model.ParcelV2;
import com.pitneybowes.api360.model.RateResponseV2;
import com.pitneybowes.api360.model.ReferenceV2;
import com.pitneybowes.api360.model.ShipmentOptions;
import com.pitneybowes.api360.model.ToAddressV2Response;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DomesticShipmentResponseV2
 */
@JsonPropertyOrder({
  DomesticShipmentResponseV2.JSON_PROPERTY_CORRELATION_ID,
  DomesticShipmentResponseV2.JSON_PROPERTY_SHIPMENT_ID,
  DomesticShipmentResponseV2.JSON_PROPERTY_PARCEL_TRACKING_NUMBER,
  DomesticShipmentResponseV2.JSON_PROPERTY_LABEL_LAYOUT,
  DomesticShipmentResponseV2.JSON_PROPERTY_PARCEL,
  DomesticShipmentResponseV2.JSON_PROPERTY_RATE,
  DomesticShipmentResponseV2.JSON_PROPERTY_REFERENCES,
  DomesticShipmentResponseV2.JSON_PROPERTY_PRINT_STATUS,
  DomesticShipmentResponseV2.JSON_PROPERTY_PRINT_ERROR,
  DomesticShipmentResponseV2.JSON_PROPERTY_FROM_ADDRESS,
  DomesticShipmentResponseV2.JSON_PROPERTY_TO_ADDRESS,
  DomesticShipmentResponseV2.JSON_PROPERTY_SHIPMENT_OPTIONS
})
@JsonTypeName("domesticShipmentResponseV2")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-30T12:57:37.504069+05:30[Asia/Kolkata]", comments = "Generator version: 7.7.0")
public class DomesticShipmentResponseV2 {
  public static final String JSON_PROPERTY_CORRELATION_ID = "correlationId";
  private String correlationId;

  public static final String JSON_PROPERTY_SHIPMENT_ID = "shipmentId";
  private String shipmentId;

  public static final String JSON_PROPERTY_PARCEL_TRACKING_NUMBER = "parcelTrackingNumber";
  private String parcelTrackingNumber;

  public static final String JSON_PROPERTY_LABEL_LAYOUT = "labelLayout";
  private List<DomesticShipmentResponseV2LabelLayoutInner> labelLayout = new ArrayList<>();

  public static final String JSON_PROPERTY_PARCEL = "parcel";
  private ParcelV2 parcel;

  public static final String JSON_PROPERTY_RATE = "rate";
  private RateResponseV2 rate;

  public static final String JSON_PROPERTY_REFERENCES = "references";
  private ReferenceV2 references;

  public static final String JSON_PROPERTY_PRINT_STATUS = "printStatus";
  private String printStatus;

  public static final String JSON_PROPERTY_PRINT_ERROR = "printError";
  private DomesticShipmentResponseV2PrintError printError;

  public static final String JSON_PROPERTY_FROM_ADDRESS = "fromAddress";
  private FromAddressV2Response fromAddress;

  public static final String JSON_PROPERTY_TO_ADDRESS = "toAddress";
  private ToAddressV2Response toAddress;

  public static final String JSON_PROPERTY_SHIPMENT_OPTIONS = "shipmentOptions";
  private ShipmentOptions shipmentOptions;

  public DomesticShipmentResponseV2() {
  }

  public DomesticShipmentResponseV2 correlationId(String correlationId) {
    
    this.correlationId = correlationId;
    return this;
  }

  /**
   * Key assigned by the shipping system to the transaction.
   * @return correlationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CORRELATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCorrelationId() {
    return correlationId;
  }


  @JsonProperty(JSON_PROPERTY_CORRELATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }

  public DomesticShipmentResponseV2 shipmentId(String shipmentId) {
    
    this.shipmentId = shipmentId;
    return this;
  }

  /**
   * The shipmentId, a unique identifier for an individual Shipment.
   * @return shipmentId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShipmentId() {
    return shipmentId;
  }


  @JsonProperty(JSON_PROPERTY_SHIPMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipmentId(String shipmentId) {
    this.shipmentId = shipmentId;
  }

  public DomesticShipmentResponseV2 parcelTrackingNumber(String parcelTrackingNumber) {
    
    this.parcelTrackingNumber = parcelTrackingNumber;
    return this;
  }

  /**
   * The Tracking number given to the Parcel for tracking purpose.
   * @return parcelTrackingNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARCEL_TRACKING_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParcelTrackingNumber() {
    return parcelTrackingNumber;
  }


  @JsonProperty(JSON_PROPERTY_PARCEL_TRACKING_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParcelTrackingNumber(String parcelTrackingNumber) {
    this.parcelTrackingNumber = parcelTrackingNumber;
  }

  public DomesticShipmentResponseV2 labelLayout(List<DomesticShipmentResponseV2LabelLayoutInner> labelLayout) {
    
    this.labelLayout = labelLayout;
    return this;
  }

  public DomesticShipmentResponseV2 addLabelLayoutItem(DomesticShipmentResponseV2LabelLayoutInner labelLayoutItem) {
    if (this.labelLayout == null) {
      this.labelLayout = new ArrayList<>();
    }
    this.labelLayout.add(labelLayoutItem);
    return this;
  }

  /**
   * It defines the layout of the shipping label.
   * @return labelLayout
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DomesticShipmentResponseV2LabelLayoutInner> getLabelLayout() {
    return labelLayout;
  }


  @JsonProperty(JSON_PROPERTY_LABEL_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabelLayout(List<DomesticShipmentResponseV2LabelLayoutInner> labelLayout) {
    this.labelLayout = labelLayout;
  }

  public DomesticShipmentResponseV2 parcel(ParcelV2 parcel) {
    
    this.parcel = parcel;
    return this;
  }

  /**
   * Get parcel
   * @return parcel
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARCEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ParcelV2 getParcel() {
    return parcel;
  }


  @JsonProperty(JSON_PROPERTY_PARCEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParcel(ParcelV2 parcel) {
    this.parcel = parcel;
  }

  public DomesticShipmentResponseV2 rate(RateResponseV2 rate) {
    
    this.rate = rate;
    return this;
  }

  /**
   * Get rate
   * @return rate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RateResponseV2 getRate() {
    return rate;
  }


  @JsonProperty(JSON_PROPERTY_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRate(RateResponseV2 rate) {
    this.rate = rate;
  }

  public DomesticShipmentResponseV2 references(ReferenceV2 references) {
    
    this.references = references;
    return this;
  }

  /**
   * Get references
   * @return references
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReferenceV2 getReferences() {
    return references;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferences(ReferenceV2 references) {
    this.references = references;
  }

  public DomesticShipmentResponseV2 printStatus(String printStatus) {
    
    this.printStatus = printStatus;
    return this;
  }

  /**
   * Status of the Printed Label.
   * @return printStatus
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrintStatus() {
    return printStatus;
  }


  @JsonProperty(JSON_PROPERTY_PRINT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintStatus(String printStatus) {
    this.printStatus = printStatus;
  }

  public DomesticShipmentResponseV2 printError(DomesticShipmentResponseV2PrintError printError) {
    
    this.printError = printError;
    return this;
  }

  /**
   * Get printError
   * @return printError
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINT_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DomesticShipmentResponseV2PrintError getPrintError() {
    return printError;
  }


  @JsonProperty(JSON_PROPERTY_PRINT_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintError(DomesticShipmentResponseV2PrintError printError) {
    this.printError = printError;
  }

  public DomesticShipmentResponseV2 fromAddress(FromAddressV2Response fromAddress) {
    
    this.fromAddress = fromAddress;
    return this;
  }

  /**
   * Get fromAddress
   * @return fromAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FromAddressV2Response getFromAddress() {
    return fromAddress;
  }


  @JsonProperty(JSON_PROPERTY_FROM_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromAddress(FromAddressV2Response fromAddress) {
    this.fromAddress = fromAddress;
  }

  public DomesticShipmentResponseV2 toAddress(ToAddressV2Response toAddress) {
    
    this.toAddress = toAddress;
    return this;
  }

  /**
   * Get toAddress
   * @return toAddress
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ToAddressV2Response getToAddress() {
    return toAddress;
  }


  @JsonProperty(JSON_PROPERTY_TO_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToAddress(ToAddressV2Response toAddress) {
    this.toAddress = toAddress;
  }

  public DomesticShipmentResponseV2 shipmentOptions(ShipmentOptions shipmentOptions) {
    
    this.shipmentOptions = shipmentOptions;
    return this;
  }

  /**
   * Get shipmentOptions
   * @return shipmentOptions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPMENT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentOptions getShipmentOptions() {
    return shipmentOptions;
  }


  @JsonProperty(JSON_PROPERTY_SHIPMENT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipmentOptions(ShipmentOptions shipmentOptions) {
    this.shipmentOptions = shipmentOptions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DomesticShipmentResponseV2 domesticShipmentResponseV2 = (DomesticShipmentResponseV2) o;
    return Objects.equals(this.correlationId, domesticShipmentResponseV2.correlationId) &&
        Objects.equals(this.shipmentId, domesticShipmentResponseV2.shipmentId) &&
        Objects.equals(this.parcelTrackingNumber, domesticShipmentResponseV2.parcelTrackingNumber) &&
        Objects.equals(this.labelLayout, domesticShipmentResponseV2.labelLayout) &&
        Objects.equals(this.parcel, domesticShipmentResponseV2.parcel) &&
        Objects.equals(this.rate, domesticShipmentResponseV2.rate) &&
        Objects.equals(this.references, domesticShipmentResponseV2.references) &&
        Objects.equals(this.printStatus, domesticShipmentResponseV2.printStatus) &&
        Objects.equals(this.printError, domesticShipmentResponseV2.printError) &&
        Objects.equals(this.fromAddress, domesticShipmentResponseV2.fromAddress) &&
        Objects.equals(this.toAddress, domesticShipmentResponseV2.toAddress) &&
        Objects.equals(this.shipmentOptions, domesticShipmentResponseV2.shipmentOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(correlationId, shipmentId, parcelTrackingNumber, labelLayout, parcel, rate, references, printStatus, printError, fromAddress, toAddress, shipmentOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DomesticShipmentResponseV2 {\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    shipmentId: ").append(toIndentedString(shipmentId)).append("\n");
    sb.append("    parcelTrackingNumber: ").append(toIndentedString(parcelTrackingNumber)).append("\n");
    sb.append("    labelLayout: ").append(toIndentedString(labelLayout)).append("\n");
    sb.append("    parcel: ").append(toIndentedString(parcel)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    references: ").append(toIndentedString(references)).append("\n");
    sb.append("    printStatus: ").append(toIndentedString(printStatus)).append("\n");
    sb.append("    printError: ").append(toIndentedString(printError)).append("\n");
    sb.append("    fromAddress: ").append(toIndentedString(fromAddress)).append("\n");
    sb.append("    toAddress: ").append(toIndentedString(toAddress)).append("\n");
    sb.append("    shipmentOptions: ").append(toIndentedString(shipmentOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

