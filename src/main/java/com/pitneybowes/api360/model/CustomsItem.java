/*
 * Shipping APIs
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pitneybowes.api360.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CustomsItem
 */
@JsonPropertyOrder({
  CustomsItem.JSON_PROPERTY_DESCRIPTION,
  CustomsItem.JSON_PROPERTY_H_S_TARIFF_CODE,
  CustomsItem.JSON_PROPERTY_QUANTITY,
  CustomsItem.JSON_PROPERTY_UNIT_PRICE,
  CustomsItem.JSON_PROPERTY_WEIGHT_UNIT,
  CustomsItem.JSON_PROPERTY_WEIGHT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-30T12:57:37.504069+05:30[Asia/Kolkata]", comments = "Generator version: 7.7.0")
public class CustomsItem {
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_H_S_TARIFF_CODE = "hSTariffCode";
  private String hSTariffCode;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_UNIT_PRICE = "unitPrice";
  private Double unitPrice;

  /**
   * The unit of measurement. This field is required by the unitWeight object.
   */
  public enum WeightUnitEnum {
    OZ("OZ");

    private String value;

    WeightUnitEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static WeightUnitEnum fromValue(String value) {
      for (WeightUnitEnum b : WeightUnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_WEIGHT_UNIT = "weightUnit";
  private WeightUnitEnum weightUnit;

  public static final String JSON_PROPERTY_WEIGHT = "weight";
  private BigDecimal weight;

  public CustomsItem() {
  }

  public CustomsItem description(String description) {
    
    this.description = description;
    return this;
  }

  /**
   * A detailed description of the commodity.
   * @return description
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }

  public CustomsItem hSTariffCode(String hSTariffCode) {
    
    this.hSTariffCode = hSTariffCode;
    return this;
  }

  /**
   * &gt;- The destination country&#39;s tariff-classification number for the commodity. Most countries use the six-digit Harmonized System (HS) as the basis for their tariff classifications and add additional digits for more detail. The maximum length is 14 characters.If you are issuing the HS Code API, you can use this field to help with the HS code prediction by entering the commodity&#39;s HS code from another country, such as from the origin country. Enter the country that the code comes from in the hSTariffCodeCountry field.
   * @return hSTariffCode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_H_S_TARIFF_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String gethSTariffCode() {
    return hSTariffCode;
  }


  @JsonProperty(JSON_PROPERTY_H_S_TARIFF_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void sethSTariffCode(String hSTariffCode) {
    this.hSTariffCode = hSTariffCode;
  }

  public CustomsItem quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

  /**
   * Enter the total number of items of this type of commodity.
   * @return quantity
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public CustomsItem unitPrice(Double unitPrice) {
    
    this.unitPrice = unitPrice;
    return this;
  }

  /**
   * &gt;- The price of one item of this type of commodity. Currency should be declared under customsInfo.
   * @return unitPrice
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UNIT_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getUnitPrice() {
    return unitPrice;
  }


  @JsonProperty(JSON_PROPERTY_UNIT_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
  }

  public CustomsItem weightUnit(WeightUnitEnum weightUnit) {
    
    this.weightUnit = weightUnit;
    return this;
  }

  /**
   * The unit of measurement. This field is required by the unitWeight object.
   * @return weightUnit
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WEIGHT_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WeightUnitEnum getWeightUnit() {
    return weightUnit;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWeightUnit(WeightUnitEnum weightUnit) {
    this.weightUnit = weightUnit;
  }

  public CustomsItem weight(BigDecimal weight) {
    
    this.weight = weight;
    return this;
  }

  /**
   * The weight of the item.
   * @return weight
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getWeight() {
    return weight;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomsItem customsItem = (CustomsItem) o;
    return Objects.equals(this.description, customsItem.description) &&
        Objects.equals(this.hSTariffCode, customsItem.hSTariffCode) &&
        Objects.equals(this.quantity, customsItem.quantity) &&
        Objects.equals(this.unitPrice, customsItem.unitPrice) &&
        Objects.equals(this.weightUnit, customsItem.weightUnit) &&
        Objects.equals(this.weight, customsItem.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, hSTariffCode, quantity, unitPrice, weightUnit, weight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomsItem {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    hSTariffCode: ").append(toIndentedString(hSTariffCode)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    weightUnit: ").append(toIndentedString(weightUnit)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

