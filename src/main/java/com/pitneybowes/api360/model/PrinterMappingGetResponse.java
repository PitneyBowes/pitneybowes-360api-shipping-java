/*
 * Shipping APIs
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pitneybowes.api360.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PrinterMappingGetResponse
 */
@JsonPropertyOrder({
  PrinterMappingGetResponse.JSON_PROPERTY_ALIAS,
  PrinterMappingGetResponse.JSON_PROPERTY_SERIAL_NUMBER,
  PrinterMappingGetResponse.JSON_PROPERTY_PRINTER_NAME,
  PrinterMappingGetResponse.JSON_PROPERTY_SUB_ID,
  PrinterMappingGetResponse.JSON_PROPERTY_INSERT_TIME_STAMP,
  PrinterMappingGetResponse.JSON_PROPERTY_UPDATE_TIME_STAMP
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-30T12:57:37.504069+05:30[Asia/Kolkata]", comments = "Generator version: 7.7.0")
public class PrinterMappingGetResponse {
  public static final String JSON_PROPERTY_ALIAS = "alias";
  private String alias;

  public static final String JSON_PROPERTY_SERIAL_NUMBER = "serialNumber";
  private String serialNumber;

  public static final String JSON_PROPERTY_PRINTER_NAME = "printerName";
  private String printerName;

  public static final String JSON_PROPERTY_SUB_ID = "subId";
  private String subId;

  public static final String JSON_PROPERTY_INSERT_TIME_STAMP = "insertTimeStamp";
  private OffsetDateTime insertTimeStamp;

  public static final String JSON_PROPERTY_UPDATE_TIME_STAMP = "updateTimeStamp";
  private OffsetDateTime updateTimeStamp;

  public PrinterMappingGetResponse() {
  }

  public PrinterMappingGetResponse alias(String alias) {
    
    this.alias = alias;
    return this;
  }

  /**
   * The printer connected (directly or via network) to a computer.
   * @return alias
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlias() {
    return alias;
  }


  @JsonProperty(JSON_PROPERTY_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlias(String alias) {
    this.alias = alias;
  }

  public PrinterMappingGetResponse serialNumber(String serialNumber) {
    
    this.serialNumber = serialNumber;
    return this;
  }

  /**
   * A Device Serial number.
   * @return serialNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSerialNumber() {
    return serialNumber;
  }


  @JsonProperty(JSON_PROPERTY_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }

  public PrinterMappingGetResponse printerName(String printerName) {
    
    this.printerName = printerName;
    return this;
  }

  /**
   * The Printer name which is used for mapping.
   * @return printerName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINTER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrinterName() {
    return printerName;
  }


  @JsonProperty(JSON_PROPERTY_PRINTER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrinterName(String printerName) {
    this.printerName = printerName;
  }

  public PrinterMappingGetResponse subId(String subId) {
    
    this.subId = subId;
    return this;
  }

  /**
   * The subscription ID used for mapping.
   * @return subId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubId() {
    return subId;
  }


  @JsonProperty(JSON_PROPERTY_SUB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubId(String subId) {
    this.subId = subId;
  }

  public PrinterMappingGetResponse insertTimeStamp(OffsetDateTime insertTimeStamp) {
    
    this.insertTimeStamp = insertTimeStamp;
    return this;
  }

  /**
   * It records saved Timestamp.
   * @return insertTimeStamp
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INSERT_TIME_STAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getInsertTimeStamp() {
    return insertTimeStamp;
  }


  @JsonProperty(JSON_PROPERTY_INSERT_TIME_STAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInsertTimeStamp(OffsetDateTime insertTimeStamp) {
    this.insertTimeStamp = insertTimeStamp;
  }

  public PrinterMappingGetResponse updateTimeStamp(OffsetDateTime updateTimeStamp) {
    
    this.updateTimeStamp = updateTimeStamp;
    return this;
  }

  /**
   * It records updated Timestamp.
   * @return updateTimeStamp
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME_STAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdateTimeStamp() {
    return updateTimeStamp;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME_STAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTimeStamp(OffsetDateTime updateTimeStamp) {
    this.updateTimeStamp = updateTimeStamp;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrinterMappingGetResponse printerMappingGetResponse = (PrinterMappingGetResponse) o;
    return Objects.equals(this.alias, printerMappingGetResponse.alias) &&
        Objects.equals(this.serialNumber, printerMappingGetResponse.serialNumber) &&
        Objects.equals(this.printerName, printerMappingGetResponse.printerName) &&
        Objects.equals(this.subId, printerMappingGetResponse.subId) &&
        Objects.equals(this.insertTimeStamp, printerMappingGetResponse.insertTimeStamp) &&
        Objects.equals(this.updateTimeStamp, printerMappingGetResponse.updateTimeStamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alias, serialNumber, printerName, subId, insertTimeStamp, updateTimeStamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrinterMappingGetResponse {\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    printerName: ").append(toIndentedString(printerName)).append("\n");
    sb.append("    subId: ").append(toIndentedString(subId)).append("\n");
    sb.append("    insertTimeStamp: ").append(toIndentedString(insertTimeStamp)).append("\n");
    sb.append("    updateTimeStamp: ").append(toIndentedString(updateTimeStamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

