/*
 * Shipping APIs
 * ### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pitneybowes.api360.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ShipmentOptionsERR
 */
@JsonPropertyOrder({
  ShipmentOptionsERR.JSON_PROPERTY_ADD_TO_MANIFEST,
  ShipmentOptionsERR.JSON_PROPERTY_PRINT_CUSTOM_MESSAGE,
  ShipmentOptionsERR.JSON_PROPERTY_RECEIPT_OPTION,
  ShipmentOptionsERR.JSON_PROPERTY_PRINT_DEPARTMENT,
  ShipmentOptionsERR.JSON_PROPERTY_PRINT_INVOICE_NUMBER,
  ShipmentOptionsERR.JSON_PROPERTY_PRINT_P_O_NUMBER
})
@JsonTypeName("shipmentOptionsERR")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-30T12:57:37.504069+05:30[Asia/Kolkata]", comments = "Generator version: 7.7.0")
public class ShipmentOptionsERR {
  public static final String JSON_PROPERTY_ADD_TO_MANIFEST = "addToManifest";
  private Boolean addToManifest;

  public static final String JSON_PROPERTY_PRINT_CUSTOM_MESSAGE = "printCustomMessage";
  private String printCustomMessage;

  /**
   * It provides options to print receipt with Shipping Label. This is only applicable for USPS, and takes values: &#x60;RECEIPT_ONLY&#x60;, &#x60;RECEIPT_WITH_INSTRUCTIONS&#x60;, or &#x60;NO_OPTIONS&#x60;.
   */
  public enum ReceiptOptionEnum {
    RECEIPT_ONLY("RECEIPT_ONLY"),
    
    RECEIPT_WITH_INSTRUCTIONS("RECEIPT_WITH_INSTRUCTIONS"),
    
    NO_OPTIONS("NO_OPTIONS");

    private String value;

    ReceiptOptionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReceiptOptionEnum fromValue(String value) {
      for (ReceiptOptionEnum b : ReceiptOptionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RECEIPT_OPTION = "receiptOption";
  private ReceiptOptionEnum receiptOption;

  public static final String JSON_PROPERTY_PRINT_DEPARTMENT = "printDepartment";
  private String printDepartment;

  public static final String JSON_PROPERTY_PRINT_INVOICE_NUMBER = "printInvoiceNumber";
  private String printInvoiceNumber;

  public static final String JSON_PROPERTY_PRINT_P_O_NUMBER = "printPONumber";
  private String printPONumber;

  public ShipmentOptionsERR() {
  }

  public ShipmentOptionsERR addToManifest(Boolean addToManifest) {
    
    this.addToManifest = addToManifest;
    return this;
  }

  /**
   * This option asks if the shipment is to be added for Manifest, so that the shipment can be reflected in the Manifest Form while compilation. The value can be &#39;true&#39; or &#39;false&#39;. Applicable for USPS.
   * @return addToManifest
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADD_TO_MANIFEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAddToManifest() {
    return addToManifest;
  }


  @JsonProperty(JSON_PROPERTY_ADD_TO_MANIFEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddToManifest(Boolean addToManifest) {
    this.addToManifest = addToManifest;
  }

  public ShipmentOptionsERR printCustomMessage(String printCustomMessage) {
    
    this.printCustomMessage = printCustomMessage;
    return this;
  }

  /**
   * This prints a custom message on the Shipping Label.
   * @return printCustomMessage
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINT_CUSTOM_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrintCustomMessage() {
    return printCustomMessage;
  }


  @JsonProperty(JSON_PROPERTY_PRINT_CUSTOM_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintCustomMessage(String printCustomMessage) {
    this.printCustomMessage = printCustomMessage;
  }

  public ShipmentOptionsERR receiptOption(ReceiptOptionEnum receiptOption) {
    
    this.receiptOption = receiptOption;
    return this;
  }

  /**
   * It provides options to print receipt with Shipping Label. This is only applicable for USPS, and takes values: &#x60;RECEIPT_ONLY&#x60;, &#x60;RECEIPT_WITH_INSTRUCTIONS&#x60;, or &#x60;NO_OPTIONS&#x60;.
   * @return receiptOption
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECEIPT_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReceiptOptionEnum getReceiptOption() {
    return receiptOption;
  }


  @JsonProperty(JSON_PROPERTY_RECEIPT_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReceiptOption(ReceiptOptionEnum receiptOption) {
    this.receiptOption = receiptOption;
  }

  public ShipmentOptionsERR printDepartment(String printDepartment) {
    
    this.printDepartment = printDepartment;
    return this;
  }

  /**
   * It displays/prints the Department on the Shipping Label.
   * @return printDepartment
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINT_DEPARTMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrintDepartment() {
    return printDepartment;
  }


  @JsonProperty(JSON_PROPERTY_PRINT_DEPARTMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintDepartment(String printDepartment) {
    this.printDepartment = printDepartment;
  }

  public ShipmentOptionsERR printInvoiceNumber(String printInvoiceNumber) {
    
    this.printInvoiceNumber = printInvoiceNumber;
    return this;
  }

  /**
   * It displays/prints Invoice Number on the Shipping Label.
   * @return printInvoiceNumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINT_INVOICE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrintInvoiceNumber() {
    return printInvoiceNumber;
  }


  @JsonProperty(JSON_PROPERTY_PRINT_INVOICE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintInvoiceNumber(String printInvoiceNumber) {
    this.printInvoiceNumber = printInvoiceNumber;
  }

  public ShipmentOptionsERR printPONumber(String printPONumber) {
    
    this.printPONumber = printPONumber;
    return this;
  }

  /**
   * It displays/prints PO Number on the Shipping Label.
   * @return printPONumber
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRINT_P_O_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrintPONumber() {
    return printPONumber;
  }


  @JsonProperty(JSON_PROPERTY_PRINT_P_O_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrintPONumber(String printPONumber) {
    this.printPONumber = printPONumber;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipmentOptionsERR shipmentOptionsERR = (ShipmentOptionsERR) o;
    return Objects.equals(this.addToManifest, shipmentOptionsERR.addToManifest) &&
        Objects.equals(this.printCustomMessage, shipmentOptionsERR.printCustomMessage) &&
        Objects.equals(this.receiptOption, shipmentOptionsERR.receiptOption) &&
        Objects.equals(this.printDepartment, shipmentOptionsERR.printDepartment) &&
        Objects.equals(this.printInvoiceNumber, shipmentOptionsERR.printInvoiceNumber) &&
        Objects.equals(this.printPONumber, shipmentOptionsERR.printPONumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addToManifest, printCustomMessage, receiptOption, printDepartment, printInvoiceNumber, printPONumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipmentOptionsERR {\n");
    sb.append("    addToManifest: ").append(toIndentedString(addToManifest)).append("\n");
    sb.append("    printCustomMessage: ").append(toIndentedString(printCustomMessage)).append("\n");
    sb.append("    receiptOption: ").append(toIndentedString(receiptOption)).append("\n");
    sb.append("    printDepartment: ").append(toIndentedString(printDepartment)).append("\n");
    sb.append("    printInvoiceNumber: ").append(toIndentedString(printInvoiceNumber)).append("\n");
    sb.append("    printPONumber: ").append(toIndentedString(printPONumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

